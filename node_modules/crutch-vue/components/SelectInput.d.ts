declare const SelectInput: import("vue").DefineComponent<
  {
    options: {
      type: ArrayConstructor;
      default: never[];
    };
    modelValue: {
      type: (
        | ObjectConstructor
        | StringConstructor
        | NumberConstructor
        | ArrayConstructor
      )[];
      default: null;
    };
    disable: {
      type: BooleanConstructor;
      default: boolean;
    };
    selectClass: {
      type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
      default: string;
    };
    label: {
      type: StringConstructor;
      default: string;
    };
    labelClass: {
      type: StringConstructor;
      default: string;
    };
    groupClass: {
      type: StringConstructor;
      default: string;
    };
    selectId: {
      type: StringConstructor;
      default: string;
    };
    errorClass: {
      type: StringConstructor;
      default: string;
    };
    showErrorText: {
      type: BooleanConstructor;
      default: boolean;
    };
    errorText: {
      type: StringConstructor;
      default: string;
    };
    useErrorFeedback: {
      type: BooleanConstructor;
      default: boolean;
    };
  },
  {
    activeOption: import("vue").WritableComputedRef<
      string | number | unknown[] | Record<string, any>
    >;
  },
  unknown,
  {},
  {},
  import("vue").ComponentOptionsMixin,
  import("vue").ComponentOptionsMixin,
  Record<string, any>,
  string,
  import("vue").VNodeProps &
    import("vue").AllowedComponentProps &
    import("vue").ComponentCustomProps,
  Readonly<
    import("vue").ExtractPropTypes<{
      options: {
        type: ArrayConstructor;
        default: never[];
      };
      modelValue: {
        type: (
          | ObjectConstructor
          | StringConstructor
          | NumberConstructor
          | ArrayConstructor
        )[];
        default: null;
      };
      disable: {
        type: BooleanConstructor;
        default: boolean;
      };
      selectClass: {
        type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
        default: string;
      };
      label: {
        type: StringConstructor;
        default: string;
      };
      labelClass: {
        type: StringConstructor;
        default: string;
      };
      groupClass: {
        type: StringConstructor;
        default: string;
      };
      selectId: {
        type: StringConstructor;
        default: string;
      };
      errorClass: {
        type: StringConstructor;
        default: string;
      };
      showErrorText: {
        type: BooleanConstructor;
        default: boolean;
      };
      errorText: {
        type: StringConstructor;
        default: string;
      };
      useErrorFeedback: {
        type: BooleanConstructor;
        default: boolean;
      };
    }>
  >,
  {
    errorText: string;
    label: string;
    options: unknown[];
    modelValue: string | number | unknown[] | Record<string, any>;
    selectClass: string | unknown[] | Record<string, any>;
    labelClass: string;
    groupClass: string;
    selectId: string;
    disable: boolean;
    errorClass: string;
    showErrorText: boolean;
    useErrorFeedback: boolean;
  }
>;
export default SelectInput;
export { SelectInput };
